@using System.Globalization;
@model TicketModel
@{
    ViewData["Title"] = "نوبت مشاوره";

    var days = new List<SelectListItem>();
    for(int day = 1; day <= 9; day++)
    {
        days.Add(new SelectListItem()
            {
                Value = day.ToString(),
                Text = convertDay(day),
            });
    }

    string convertDay(int day)
    {
        return day.ToString()
            .Replace("1", "روز اول اعلام نتایج")
            .Replace("2", "روز دوم اعلام نتایج")
            .Replace("3", "روز سوم اعلام نتایج")
            .Replace("4", "روز چهارم اعلام نتایج")
            .Replace("5", "روز پنجم اعلام نتایج")
            .Replace("6", "روز ششم اعلام نتایج")
            .Replace("7", "روز هفتم اعلام نتایج")
            .Replace("8", "روز هشتم اعلام نتایج")
            .Replace("9", "روز نهم اعلام نتایج");

    }
}

<form id="ticket-form" method="post">
    <div class="form-floating p-3 mb-3 border border-success rounded-lg bg-white box-shadow">
        @Html.LabelFor(m => m.Day, new { @class = "form-label col-12" })
        <div class="row d-flex justify-content-between pr-3 pl-3 mb-3">
            @Html.DropDownListFor(m => m.Day,
                new SelectList(days.ToList(), "Value", "Text", null),
                null,
                new { @class = "form-control col-5 text-right" })
            @Html.TextBoxFor(m => m.Minute, new { @class = "form-control col-3 text-center", @placeholder = "دقیقه" })
            @Html.TextBoxFor(m => m.Hour, new { @class = "form-control col-3 text-center", @placeholder = "ساعت" })
        </div>
        @Html.ValidationMessageFor(m => m.Day, "", new { @class = "text-danger" })
        <div class="row pr-3 pl-3 mb-3 ltr">
            <button type="submit" class="form-control col-md-3 btn btn-outline-success">اضافه کردن نوبت</button>
        </div>
    </div>
</form>
<ul class="list-group p-0">
@foreach(var ticket in Model.Tickets)
{
    var date = convertDay(ticket.Day);
    var time = String.Format("{0}:{1:00}",
        ticket.Hour,
        ticket.Minute);

    var ticketClass = (ticket.Taken)
        ? "success"
        : (ticket.Reserved)
            ? "warning"
            : "dark";

        <li class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
        <div>
            @date
            <span class="badge badge-@ticketClass">@time</span>
        </div>
        <div>
            @if(ticket.Taken || ticket.Reserved)
            {
                <a class="btn btn-sm btn-outline-primary" asp-area="Account" asp-controller="Administrator" asp-action="Meeting" asp-route-id="@ticket.Meeting.Id">
                    <i class="fa fa-barcode"></i>
                </a>
            }
            <a class="btn btn-sm btn-outline-danger" asp-area="Account" asp-controller="Administrator" asp-action="Ticket" asp-route-id="@ticket.Id">
                <i class="fa fa-trash-o"></i>
            </a>
        </div>
    </li>
}
</ul>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
